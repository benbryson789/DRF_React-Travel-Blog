{"ast":null,"code":"var _jsxFileName = \"/Users/debrashelby/Desktop/DRF/newproject/DRF_React-Travel-Blog/travelblog/src/Pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Footer from './Footer';\nimport NavBar from './NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password1: '',\n    password2: ''\n  });\n\n  const handleRegister = () => {\n    if (formData.username === \"\" || formData.email === \"\" || formData.password1 === \"\" || formData.password2 === \"\") {\n      alert(\"Please fill all required field\");\n      return false;\n    }\n\n    if (formData.password1 !== formData.password2) {\n      alert(\"Password1 and Password2 should be the same !\");\n      return false;\n    }\n\n    let url = \"\";\n    fetch(url).then(response => response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            method: \"POST\",\n            class: \"web-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"id_username\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              onClick: e => {\n                setFormData({ ...formData,\n                  username: e.target.value\n                });\n              },\n              maxlength: \"150\",\n              autofocus: \"\",\n              required: \"\",\n              id: \"id_username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 171\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"helptext\",\n              children: \"Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"id_email\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              onClick: e => {\n                setFormData({ ...formData,\n                  email: e.target.value\n                });\n              },\n              required: \"\",\n              id: \"id_email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"id_password1\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password1\",\n              onClick: e => {\n                setFormData({ ...formData,\n                  password1: e.target.value\n                });\n              },\n              required: \"\",\n              id: \"id_password1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 149\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"helptext\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Your password can\\u2019t be too similar to your other personal information.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Your password must contain at least 8 characters.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Your password can\\u2019t be a commonly used password.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Your password can\\u2019t be entirely numeric.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"id_password2\",\n              children: \"Password confirmation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password2\",\n              onClick: e => {\n                setFormData({ ...formData,\n                  password2: e.target.value\n                });\n              },\n              required: \"\",\n              id: \"id_password2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 149\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"helptext\",\n              children: \"Enter the same password as before, for verification.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn btn-primary\",\n                type: \"button\",\n                onClick: handleRegister,\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 3\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"text-center\",\n              children: [\"If you already have an account, \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/login\",\n                children: [\"onClick=\", e => {\n                  e.preventDefault();\n                  history.push('/login');\n                }, \"login\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 58\n              }, this), \" instead.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"vWC1QRxWGcuUEQsOYT6AlYDsW40=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/debrashelby/Desktop/DRF/newproject/DRF_React-Travel-Blog/travelblog/src/Pages/Register.js"],"names":["React","useState","useHistory","Footer","NavBar","Register","history","formData","setFormData","username","email","password1","password2","handleRegister","alert","url","fetch","then","response","e","target","value","preventDefault","push"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport { useHistory } from 'react-router'\nimport Footer from './Footer'\nimport NavBar from './NavBar'\n\nconst Register = () => {\n    const history = useHistory();\n    const[formData,setFormData] = useState({username:'',email:'',password1:'',password2:''});\n    const handleRegister = ()=>{\n        if(formData.username === \"\" || formData.email === \"\" || formData.password1 === \"\" || formData.password2 === \"\"){\n            alert(\"Please fill all required field\");\n            return false;\n        }\n        if(formData.password1 !== formData.password2 ) {\n            alert(\"Password1 and Password2 should be the same !\");\n            return false;\n        }\n        let url = \"\"\n        fetch(url)\n        .then(response=>response)\n    }\n    return (\n        <>\n          <NavBar/>\n          <div className=\"container\">\n                 <div className=\"row\">\n                            <div className=\"col-md-12\">\n                            <form method=\"POST\" class=\"web-form\">\n\t\t<h1>Register</h1>\n\t\t<label for=\"id_username\">Username:</label>\n        <input type=\"text\" name=\"username\" onClick={(e)=>{setFormData({...formData,username:e.target.value})}} maxlength=\"150\" autofocus=\"\" required=\"\" id=\"id_username\"/><br/>\n        <span class=\"helptext\">Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.</span>\n        <label for=\"id_email\">Email:</label>\n        <input type=\"email\" name=\"email\"  onClick={(e)=>{setFormData({...formData,email:e.target.value})}}required=\"\" id=\"id_email\"/>\n        <label for=\"id_password1\">Password:</label>\n        <input type=\"password\" name=\"password1\" onClick={(e)=>{setFormData({...formData,password1:e.target.value})}} required=\"\" id=\"id_password1\"/><br/>\n        <span class=\"helptext\">\n            <ul>\n                <li>Your password can’t be too similar to your other personal information.</li>\n                <li>Your password must contain at least 8 characters.</li>\n                <li>Your password can’t be a commonly used password.</li>\n                <li>Your password can’t be entirely numeric.</li>\n            </ul>\n        </span>\n        <label for=\"id_password2\">Password confirmation:</label>\n        <input type=\"password\" name=\"password2\" onClick={(e)=>{setFormData({...formData,password2:e.target.value})}} required=\"\" id=\"id_password2\"/><br/>\n        <span class=\"helptext\">Enter the same password as before, for verification.</span>\n        <div class=\"form-btn\">\n\t\t<button class=\"btn btn-primary\" type=\"button\" onClick={handleRegister}>Register</button>\n        </div>\n\t\t<p class=\"text-center\">If you already have an account, <a href=\"/login\" >onClick={(e)=>{ e.preventDefault(); history.push('/login');}}login</a> instead.</p>\n\t</form>\n                            </div>\n        </div>\n</div> \n\n        <Footer/>  \n        </>\n    )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}